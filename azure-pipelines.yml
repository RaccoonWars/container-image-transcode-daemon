# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

name: "1.$(date:yyMM)$(rev:.r)"

trigger:
  batch: true
  branches:
    include:
      - main
      
pool: "BurienStation-Kubernetes"

stages:
- stage: Build 
  displayName: Build and Publish Image of RSYSLOG on ubuntu
  jobs:  
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:

    - task: DownloadPackage@1
      inputs:
        packageType: 'upack'
        feed: 'd0b511a7-5c5f-4f17-b663-8a928fdaddea/cf1ba1bd-e9d2-4125-81cc-122214ee89b4'
        view: 
        definition: 'aefd56a4-0495-4181-9b23-5fd47b355c26'
        version: '4.0.0'
        downloadPath: '$(Build.SourcesDirectory)/ndisdk'
        extract: true

    - task: PowerShell@2
      inputs:
        targetType: 'inline'
        script: 'Push-Location $(Build.SourcesDirectory); Get-ChildItem -Recurse'

    - task: Docker@2
      displayName: "Build and NDI Discovery Service"
      inputs:
        containerRegistry: 'home-core-dockerhub'
        repository: 'fargobose/ndi-directory'
        command: 'buildAndPush'
        Dockerfile: '$(Build.SourcesDirectory)/dockerfile'
        buildContext: '$(Build.SourcesDirectory)/'
        tags: |
          $(Build.BuildNumber)
          latest

    - task: CopyFiles@2
      displayName: "Copy build files to artifact staging directory ($(Build.SourcesDirectory) => $(Build.ArtifactStagingDirectory))"
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: '**'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
        CleanTargetFolder: true
        OverWrite: true
      condition: failed()

    - task: PublishBuildArtifacts@1
      displayName: "Publish Artifact folder to Azure Artifacts"
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      condition: failed()